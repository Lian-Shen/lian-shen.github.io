# AI改变生活

一、AI的起源与发展人工智能的概念最
可以追溯到上世纪50年代。当时，计算机科学
家们开始探
讨如何让机器具备
智能。随着时间的推移，
计算机性能的提升和算法的进步使得
AI技术得到了飞速的发展。
从简单的规则系统到深度学习，
再到今天的强化学习和迁移学习
，AI已经成为了一个涵盖广泛领域的
复杂学科。。

...

这里插入任意的文本内容。

**关键词**：编辑器，格式化，Markdown。

# 第一章 绪论

## 1.1 课题背景

[这是一段正文内容]

>引用他人的论点论据，用来佐证本文的背景及意义。
>
>——引文出处，适当增加尾注[^1]

[这是一段正文内容]

## 1.2 信息化管理

## 1.3 系统设计目的和内容

[^1]: 绪论尾注 1 的内容。

# 第二章 需求分析

## 2.1 可行性分析

### 2.1.1 技术可行性

同类产品技术解决方案：

- XX 公司实现的产品，用了 合金 技术；
- XX 公司实现的产品，用了 联沈 技术；
- XX 公司实现的产品，用了 联万 技术。

### 2.1.2 经济可行性

​```mermaid
pie title 市场分析
    "已改造" : 386
    "未改造" : 85
​```

<center>图1：市场分析图</center>

### 2.1.3 管理可行性

## 2.2 需求分析

### 2.2.1 功能需求

- 功能点1
  - 子功能点 1-1
  - 子功能点 1-2
  - 子功能点 1-3
- 功能点2
  - 子功能点 2-1
  - 子功能点 2-2
- 功能点3

### 2.2.2 环境需求

| 需求项   | 需求指标  |
| -------- | --------- |
| 操作系统 | CentOS 7  |
| 数据库   | Mysql 5.7 |
| 内存     | 8G        |
| 硬盘     | 100G      |

## 2.3 数据项分析

数据表整理

| 数据对象 | 简述               | 来源     | 核心数据项   | 主键   |
| -------- | ------------------ | -------- | ------------ | ------ |
| 管理员表 | 保存系统管理员信息 | 注册     | 登录名       | 登录名 |
| 学生表   | 保存学员信息       | 批量导入 | 姓名、学号   | 学号   |
| 老师表   | 保存教职工信息     | 批量导入 | 姓名、职工号 | 职工号 |
| 部门表   | 保存部门、班级信息 | 批量导入 | 名称、编号   | 编号   |


# 第四章 功能实现

## 4.1 后台代码实现

​```java
public class Starter {
	public static void main(String[] args) {
  	System.out.println("Hello world");
  }
}
​```

## 4.2 前端代码实现

前端 HTML 代码：

​```html
<!DOCTYPE HTML>
<html>
  <head></head>
  <body>
    <p>Hello world.</p>
  </body>
</html>
​```

前端脚本代码：

​```javascript
function main() {
	alert("Hello world!");
}

window.onload = main;
​```

## 4.3 配置文件代码

properties 类型的配置文件：

​```properties
jdbc.driver=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://localhost:3306/helloworld?characterEncoding=utf8
jdbc.username=root
jdbc.password=root
​```

## 4.4 运行及启动日志

​```bash
java Starter
---
Hello world
​```

网页截图：

![](../images/4-1.png)

<center>图4-1：访问效果图</center>

@requires_authorization

def somefunc(param1='', param2=0):

'''A docstring'''

if param1 > param2: # interesting

print 'Greater'

return (param2-param1+1) or None

Class SomeClass:

pass

>>> message = '''interpreter

... prompt'''

